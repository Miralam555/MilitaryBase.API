// <auto-generated />
using System;
using DataAccess.Conrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(MilitaryBaseContext))]
    [Migration("20250327131156_mig_1")]
    partial class mig_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");
                });

            modelBuilder.Entity("Core.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("VARBINARY(500)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("VARBINARY(500)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.BattleHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BattleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BattleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("InjuryOrDiseaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VeteranNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("BattleHistory", (string)null);
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.CrimeRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChargeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeDuration")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("PenalInstitution")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PersonelId");

                    b.ToTable("CrimeRecords");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.EducationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EducationType");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EducationTypes");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.FamilyMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MemberPatronymic")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MemberSurName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("RelationShip")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("FamilyMembers");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.FamilyMembersInService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PersonelId");

                    b.ToTable("FamilyMembersInService", (string)null);
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.Injunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("InjuctionStartDate")
                        .HasColumnType("date");

                    b.Property<bool?>("InjunctionIsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("InjunctionNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("InjunctionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("IssuedByPersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InjunctionTypeId");

                    b.HasIndex("IssuedByPersonelId");

                    b.ToTable("Injunctions");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.InjunctionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InjunctionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InjunctionTypes");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MaritalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StatusName")
                        .IsUnique()
                        .HasFilter("[StatusName] IS NOT NULL");

                    b.ToTable("MaritalStatus", (string)null);
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryMedicalAssessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("AssesmentDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Opinion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("MilitaryMedicalAssessments");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPenaltyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PenaltyType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MilitaryPenaltyTypes");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PersonelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PersonelName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PersonelSurname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MilitaryPersonels");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EducationTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("GraduationYear")
                        .HasColumnType("date");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EducationTypeId");

                    b.HasIndex("PersonelId");

                    b.ToTable("MilitaryPersonelEducation", (string)null);
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelFamilyMemberForeignTravel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("TravelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravellingCountryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("MilitaryPersonelFamilyMemberForeignTravel", (string)null);
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelForeignLanguageLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AllowanceInjunctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LanguageLevel")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AllowanceInjunctionId");

                    b.HasIndex("PersonelId");

                    b.ToTable("MilitaryPersonelForeignLanguageLevels");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelForeignTravel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("InjunctionId")
                        .HasColumnType("int");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("TravelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravellingCountryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InjunctionId");

                    b.HasIndex("PersonelId");

                    b.ToTable("MilitaryPersonelForeignTravels");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IdentityCardNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("PIN");

                    b.Property<string>("RegistrationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityCardNumber")
                        .IsUnique();

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("Pin")
                        .IsUnique();

                    b.ToTable("MilitaryPersonelInfos");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelPenalty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InjunctionId")
                        .HasColumnType("int");

                    b.Property<string>("PenaltyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PenaltyTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InjunctionId");

                    b.HasIndex("PenaltyTypeId");

                    b.HasIndex("PersonelId");

                    b.ToTable("MilitaryPersonelPenalties");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelRecognition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Injunctionİd")
                        .HasColumnType("int");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("RecognitionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Injunctionİd");

                    b.HasIndex("PersonelId");

                    b.ToTable("MilitaryPersonelRecognition", (string)null);
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelReputationRiskFinding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportingAgency")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("MilitaryPersonelReputationRiskFindings");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelSpecialSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Skill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("MilitaryPersonelSpecialSkills");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryRank", b =>
                {
                    b.Property<int>("InjunctionId")
                        .HasColumnType("int")
                        .HasColumnName("InjunctionID");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("RankName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InjunctionId");

                    b.HasIndex("PersonelId");

                    b.ToTable("MilitaryRanks");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryServiceExtension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExtensionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("InjunctionId")
                        .HasColumnType("int");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InjunctionId");

                    b.HasIndex("PersonelId");

                    b.ToTable("MilitaryServiceExtension", (string)null);
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryServiceHistory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("InjunctionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCurrentMilitary")
                        .HasColumnType("bit");

                    b.Property<string>("OfficialRank")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InjunctionId")
                        .IsUnique();

                    b.ToTable("MilitaryServiceHistory", (string)null);
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitarySkillRecord", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ApprovedByInjunctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IssuedByInjunctionId")
                        .HasColumnType("int");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillDegree")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedByInjunctionId")
                        .IsUnique();

                    b.ToTable("MilitarySkillRecords");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.PreMilitaryWorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("WorkEndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("WorkStartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("PreMilitaryWorkExperience", (string)null);
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.ProfessionalDevelopmentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("InjunctionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCurrentMilitary")
                        .HasColumnType("bit");

                    b.Property<string>("OrganizedLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InjunctionId");

                    b.HasIndex("PersonelId");

                    b.ToTable("ProfessionalDevelopmentCourses");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.ServiceYearsWithBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BenefitID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("AppoinmentOrderDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("BenefitDocumentDate")
                        .HasColumnType("date");

                    b.Property<string>("BenefitDocumentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BenefitDocumentNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReleaseOrderDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("ServiceYearsWithBenefits");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.SpecialRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InformationDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MilitaryPersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MilitaryPersonelId");

                    b.ToTable("SpecialRecords");
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.HasOne("Core.Entities.Concrete.OperationClaim", "OperationClaim")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .IsRequired();

                    b.HasOne("Core.Entities.Concrete.User", "User")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.BattleHistory", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("BattleHistories")
                        .HasForeignKey("PersonelId");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.CrimeRecord", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.FamilyMember", "Member")
                        .WithMany("CrimeRecords")
                        .HasForeignKey("MemberId");

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("CrimeRecords")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.FamilyMember", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.FamilyMembersInService", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.FamilyMember", "Member")
                        .WithMany("FamilyMembersInServices")
                        .HasForeignKey("MemberId")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("FamilyMembersInServices")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.Injunction", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.InjunctionType", "InjunctionType")
                        .WithMany("Injunctions")
                        .HasForeignKey("InjunctionTypeId")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "IssuedByPersonel")
                        .WithMany("Injunctions")
                        .HasForeignKey("IssuedByPersonelId")
                        .IsRequired();

                    b.Navigation("InjunctionType");

                    b.Navigation("IssuedByPersonel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryMedicalAssessment", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("MilitaryMedicalAssessments")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelEducation", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.EducationType", "EducationType")
                        .WithMany("MilitaryPersonelEducations")
                        .HasForeignKey("EducationTypeId")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("MilitaryPersonelEducations")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("EducationType");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelFamilyMemberForeignTravel", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.FamilyMember", "Member")
                        .WithMany("MilitaryPersonelFamilyMemberForeignTravels")
                        .HasForeignKey("MemberId")
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelForeignLanguageLevel", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.Injunction", "AllowanceInjunction")
                        .WithMany("MilitaryPersonelForeignLanguageLevels")
                        .HasForeignKey("AllowanceInjunctionId")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("MilitaryPersonelForeignLanguageLevels")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("AllowanceInjunction");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelForeignTravel", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.Injunction", "Injunction")
                        .WithMany("MilitaryPersonelForeignTravels")
                        .HasForeignKey("InjunctionId")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("MilitaryPersonelForeignTravels")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Injunction");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelInfo", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithOne("MilitaryPersonelInfo")
                        .HasForeignKey("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelInfo", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MaritalStatus", "MaritalStatus")
                        .WithMany("MilitaryPersonelInfos")
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaritalStatus");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelPenalty", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.Injunction", "Injunction")
                        .WithMany("MilitaryPersonelPenalties")
                        .HasForeignKey("InjunctionId")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPenaltyType", "PenaltyType")
                        .WithMany("MilitaryPersonelPenalties")
                        .HasForeignKey("PenaltyTypeId")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("MilitaryPersonelPenalties")
                        .HasForeignKey("PersonelId");

                    b.Navigation("Injunction");

                    b.Navigation("PenaltyType");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelRecognition", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.Injunction", "InjunctionİdNavigation")
                        .WithMany("MilitaryPersonelRecognitions")
                        .HasForeignKey("Injunctionİd")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("MilitaryPersonelRecognitions")
                        .HasForeignKey("PersonelId");

                    b.Navigation("InjunctionİdNavigation");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelReputationRiskFinding", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("MilitaryPersonelReputationRiskFindings")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonelSpecialSkill", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("MilitaryPersonelSpecialSkills")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryRank", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.Injunction", "Injunction")
                        .WithOne("MilitaryRank")
                        .HasForeignKey("MyMilitaryFinalProject.Entities.Concrete.MilitaryRank", "InjunctionId")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("MilitaryRanks")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Injunction");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryServiceExtension", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.Injunction", "Injunction")
                        .WithMany("MilitaryServiceExtensions")
                        .HasForeignKey("InjunctionId")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("MilitaryServiceExtensions")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Injunction");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryServiceHistory", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithOne("MilitaryServiceHistory")
                        .HasForeignKey("MyMilitaryFinalProject.Entities.Concrete.MilitaryServiceHistory", "Id")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.Injunction", "Injunction")
                        .WithOne("MilitaryServiceHistory")
                        .HasForeignKey("MyMilitaryFinalProject.Entities.Concrete.MilitaryServiceHistory", "InjunctionId")
                        .IsRequired();

                    b.Navigation("Injunction");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitarySkillRecord", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.Injunction", "Injunction")
                        .WithOne("MilitarySkillRecord")
                        .HasForeignKey("MyMilitaryFinalProject.Entities.Concrete.MilitarySkillRecord", "ApprovedByInjunctionId")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithOne("MilitarySkillRecord")
                        .HasForeignKey("MyMilitaryFinalProject.Entities.Concrete.MilitarySkillRecord", "Id")
                        .IsRequired();

                    b.Navigation("Injunction");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.PreMilitaryWorkExperience", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("PreMilitaryWorkExperiences")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.ProfessionalDevelopmentCourse", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.Injunction", "Injunction")
                        .WithMany("ProfessionalDevelopmentCourses")
                        .HasForeignKey("InjunctionId")
                        .IsRequired();

                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("ProfessionalDevelopmentCourses")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Injunction");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.ServiceYearsWithBenefit", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "Personel")
                        .WithMany("ServiceYearsWithBenefits")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.SpecialRecord", b =>
                {
                    b.HasOne("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", "MilitaryPersonel")
                        .WithMany("SpecialRecords")
                        .HasForeignKey("MilitaryPersonelId")
                        .IsRequired();

                    b.Navigation("MilitaryPersonel");
                });

            modelBuilder.Entity("Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("Core.Entities.Concrete.User", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.EducationType", b =>
                {
                    b.Navigation("MilitaryPersonelEducations");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.FamilyMember", b =>
                {
                    b.Navigation("CrimeRecords");

                    b.Navigation("FamilyMembersInServices");

                    b.Navigation("MilitaryPersonelFamilyMemberForeignTravels");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.Injunction", b =>
                {
                    b.Navigation("MilitaryPersonelForeignLanguageLevels");

                    b.Navigation("MilitaryPersonelForeignTravels");

                    b.Navigation("MilitaryPersonelPenalties");

                    b.Navigation("MilitaryPersonelRecognitions");

                    b.Navigation("MilitaryRank")
                        .IsRequired();

                    b.Navigation("MilitaryServiceExtensions");

                    b.Navigation("MilitaryServiceHistory")
                        .IsRequired();

                    b.Navigation("MilitarySkillRecord")
                        .IsRequired();

                    b.Navigation("ProfessionalDevelopmentCourses");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.InjunctionType", b =>
                {
                    b.Navigation("Injunctions");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MaritalStatus", b =>
                {
                    b.Navigation("MilitaryPersonelInfos");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPenaltyType", b =>
                {
                    b.Navigation("MilitaryPersonelPenalties");
                });

            modelBuilder.Entity("MyMilitaryFinalProject.Entities.Concrete.MilitaryPersonel", b =>
                {
                    b.Navigation("BattleHistories");

                    b.Navigation("CrimeRecords");

                    b.Navigation("FamilyMembers");

                    b.Navigation("FamilyMembersInServices");

                    b.Navigation("Injunctions");

                    b.Navigation("MilitaryMedicalAssessments");

                    b.Navigation("MilitaryPersonelEducations");

                    b.Navigation("MilitaryPersonelForeignLanguageLevels");

                    b.Navigation("MilitaryPersonelForeignTravels");

                    b.Navigation("MilitaryPersonelInfo")
                        .IsRequired();

                    b.Navigation("MilitaryPersonelPenalties");

                    b.Navigation("MilitaryPersonelRecognitions");

                    b.Navigation("MilitaryPersonelReputationRiskFindings");

                    b.Navigation("MilitaryPersonelSpecialSkills");

                    b.Navigation("MilitaryRanks");

                    b.Navigation("MilitaryServiceExtensions");

                    b.Navigation("MilitaryServiceHistory")
                        .IsRequired();

                    b.Navigation("MilitarySkillRecord")
                        .IsRequired();

                    b.Navigation("PreMilitaryWorkExperiences");

                    b.Navigation("ProfessionalDevelopmentCourses");

                    b.Navigation("ServiceYearsWithBenefits");

                    b.Navigation("SpecialRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
